apiVersion: batch/v1
kind: CronJob
metadata:
  name: cleanup-old-replicasets
  namespace: default
spec:
  schedule: "0 * * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: OnFailure
          serviceAccountName: cleanup-service-account
          containers:
          - name: cleanup
            image: bitnami/kubectl:latest
            command:
            - /bin/bash
            - -c
            - |
              echo "ðŸ§¹ Cleaning up old ReplicaSets..."
              OLD_RS=$(kubectl get rs -n default -l app=dsp-prod --sort-by=.metadata.creationTimestamp -o jsonpath='{.items[*].metadata.name}' | tr ' ' '\n' | head -n -3)
              [ -n "$OLD_RS" ] && echo "$OLD_RS" | xargs -r kubectl delete rs -n default || echo "No old RS"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: cleanup-service-account
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cleanup-role
  namespace: default
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["get", "list", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cleanup-role-binding
  namespace: default
subjects:
- kind: ServiceAccount
  name: cleanup-service-account
  namespace: default
roleRef:
  kind: Role
  name: cleanup-role
  apiGroup: rbac.authorization.k8s.io 